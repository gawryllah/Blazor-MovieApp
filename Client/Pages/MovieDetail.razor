@page "/movie/{ID:int}/{title}"

@inject NavigationManager NavManager
@inject HttpClient httpClient
@using MovieApp.Shared.Models


@if (MoviesList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Details of @newMovie.Title</h1>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Title</th>
                <th>Summary</th>
                <th>InTheaters?</th>
                <th>Trailer</th>
                <th>Release Date</th>
                <th>Poster</th>
            </tr>
        </thead>
        <tbody>

            <tr>
                <td>@newMovie.Id</td>
                <td>@newMovie.Title</td>
                <td>@newMovie.Summary</td>
                <td>@newMovie.InTheaters</td>
                <td><a href=@newMovie.Trailer>Trailer</a></td>
                <td>@newMovie.ReleaseDate</td>
                <td> <img src="@newMovie.Poster" width="150" height="200" /></td>
            </tr>
        </tbody>
    </table>
}

<br />
<br />
<button @onclick="goBack" class="btn btn-primary">Go back</button>


@code {
    [Parameter] public int ID { get; set; }
    [Parameter] public string title { get; set; }


    private List<Movie> MoviesList;
    Movie newMovie;

    private async Task GetMovies()
    {
        var responseHTTP = await httpClient.GetAsync("https://localhost:5001/api/movies");


        if (responseHTTP.IsSuccessStatusCode)
        {
            var responseString = await responseHTTP.Content.ReadAsStringAsync();
            MoviesList = System.Text.Json.JsonSerializer.Deserialize<List<Movie>>(responseString, new System.Text.Json.JsonSerializerOptions() { PropertyNameCaseInsensitive = true });
        }
        else
        {

        }
    }
    protected async override Task OnInitializedAsync()
    {
        await GetMovies();

        newMovie = MoviesList.FirstOrDefault(m => m.Id == ID);
    }

    private void goBack()
    {
        NavManager.NavigateTo("/movies");
    }
}
